<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ddosec.design.mapper.product_design_materialmapper">
    <resultMap id="BaseResultMap" type="cn.ddosec.design.pojo.product_design_material">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="product_id" property="productId" jdbcType="VARCHAR"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="product_describe" property="productDescribe" jdbcType="VARCHAR"/>
        <result column="amount_unit" property="amountUnit" jdbcType="VARCHAR"/>
        <result column="cost_price" property="costPrice" jdbcType="DOUBLE"/>
        <result column="date" property="date" jdbcType="VARCHAR"/>
        <result column="marterial_person" property="marterialPerson" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <if test="fields == null">
            id, product_id, product_name, type, product_describe, amount_unit, cost_price, date,
            marterial_person
        </if>
        <if test="fields != null">
            ${fields}
        </if>
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="cn.ddosec.design.pojo.product_design_materialQuery">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from product_design_material
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        id,product_id,product_name,type,product_describe,amount_unit,cost_price,date,marterial_person
        from product_design_material
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from product_design_material
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="cn.ddosec.design.pojo.product_design_materialQuery">
        delete from product_design_material
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.ddosec.design.pojo.product_design_material">
        insert into product_design_material (id, product_id, product_name,
        type, product_describe, amount_unit,
        cost_price, date, marterial_person
        )
        values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR},
        #{type,jdbcType=VARCHAR}, #{productDescribe,jdbcType=VARCHAR}, #{amountUnit,jdbcType=VARCHAR},
        #{costPrice,jdbcType=DOUBLE}, #{date,jdbcType=VARCHAR}, #{marterialPerson,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="cn.ddosec.design.pojo.product_design_material">
        insert into product_design_material
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="productDescribe != null">
                product_describe,
            </if>
            <if test="amountUnit != null">
                amount_unit,
            </if>
            <if test="costPrice != null">
                cost_price,
            </if>
            <if test="date != null">
                date,
            </if>
            <if test="marterialPerson != null">
                marterial_person,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=VARCHAR},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="productDescribe != null">
                #{productDescribe,jdbcType=VARCHAR},
            </if>
            <if test="amountUnit != null">
                #{amountUnit,jdbcType=VARCHAR},
            </if>
            <if test="costPrice != null">
                #{costPrice,jdbcType=DOUBLE},
            </if>
            <if test="date != null">
                #{date,jdbcType=VARCHAR},
            </if>
            <if test="marterialPerson != null">
                #{marterialPerson,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.ddosec.design.pojo.product_design_materialQuery"
            resultType="java.lang.Integer">
        select count(*) from product_design_material
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update product_design_material
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.productId != null">
                product_id = #{record.productId,jdbcType=VARCHAR},
            </if>
            <if test="record.productName != null">
                product_name = #{record.productName,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.productDescribe != null">
                product_describe = #{record.productDescribe,jdbcType=VARCHAR},
            </if>
            <if test="record.amountUnit != null">
                amount_unit = #{record.amountUnit,jdbcType=VARCHAR},
            </if>
            <if test="record.costPrice != null">
                cost_price = #{record.costPrice,jdbcType=DOUBLE},
            </if>
            <if test="record.date != null">
                date = #{record.date,jdbcType=VARCHAR},
            </if>
            <if test="record.marterialPerson != null">
                marterial_person = #{record.marterialPerson,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update product_design_material
        set id = #{record.id,jdbcType=INTEGER},
        product_id = #{record.productId,jdbcType=VARCHAR},
        product_name = #{record.productName,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=VARCHAR},
        product_describe = #{record.productDescribe,jdbcType=VARCHAR},
        amount_unit = #{record.amountUnit,jdbcType=VARCHAR},
        cost_price = #{record.costPrice,jdbcType=DOUBLE},
        date = #{record.date,jdbcType=VARCHAR},
        marterial_person = #{record.marterialPerson,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.ddosec.design.pojo.product_design_material">
        update product_design_material
        <set>
            <if test="productId != null">
                product_id = #{productId,jdbcType=VARCHAR},
            </if>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="productDescribe != null">
                product_describe = #{productDescribe,jdbcType=VARCHAR},
            </if>
            <if test="amountUnit != null">
                amount_unit = #{amountUnit,jdbcType=VARCHAR},
            </if>
            <if test="costPrice != null">
                cost_price = #{costPrice,jdbcType=DOUBLE},
            </if>
            <if test="date != null">
                date = #{date,jdbcType=VARCHAR},
            </if>
            <if test="marterialPerson != null">
                marterial_person = #{marterialPerson,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.ddosec.design.pojo.product_design_material">
        update product_design_material
        set product_id = #{productId,jdbcType=VARCHAR},
        product_name = #{productName,jdbcType=VARCHAR},
        type = #{type,jdbcType=VARCHAR},
        product_describe = #{productDescribe,jdbcType=VARCHAR},
        amount_unit = #{amountUnit,jdbcType=VARCHAR},
        cost_price = #{costPrice,jdbcType=DOUBLE},
        date = #{date,jdbcType=VARCHAR},
        marterial_person = #{marterialPerson,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
