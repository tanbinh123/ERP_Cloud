<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ddosec.design.mapper.product_material_archivesmapper">
    <resultMap id="BaseResultMap" type="cn.ddosec.design.pojo.product_material_archives">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="materialid" property="materialid" jdbcType="VARCHAR"/>
        <result column="productid" property="productid" jdbcType="VARCHAR"/>
        <result column="materialname" property="materialname" jdbcType="VARCHAR"/>
        <result column="materialnum" property="materialnum" jdbcType="INTEGER"/>
        <result column="materialunit" property="materialunit" jdbcType="VARCHAR"/>
        <result column="materialremark" property="materialremark" jdbcType="VARCHAR"/>
        <result column="assembleId" property="assembleid" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <if test="fields == null">
            id, materialid, productid, materialname, materialnum, materialunit, materialremark,
            assembleId
        </if>
        <if test="fields != null">
            ${fields}
        </if>
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="cn.ddosec.design.pojo.product_material_archivesQuery">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from product_material_archives
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        id,materialid,productid,materialname,materialnum,materialunit,materialremark,assembleId
        from product_material_archives
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from product_material_archives
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="cn.ddosec.design.pojo.product_material_archivesQuery">
        delete from product_material_archives
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.ddosec.design.pojo.product_material_archives">
        insert into product_material_archives (id, materialid, productid,
        materialname, materialnum, materialunit,
        materialremark, assembleId)
        values (#{id,jdbcType=INTEGER}, #{materialid,jdbcType=VARCHAR}, #{productid,jdbcType=VARCHAR},
        #{materialname,jdbcType=VARCHAR}, #{materialnum,jdbcType=INTEGER}, #{materialunit,jdbcType=VARCHAR},
        #{materialremark,jdbcType=VARCHAR}, #{assembleid,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.ddosec.design.pojo.product_material_archives">
        insert into product_material_archives
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="materialid != null">
                materialid,
            </if>
            <if test="productid != null">
                productid,
            </if>
            <if test="materialname != null">
                materialname,
            </if>
            <if test="materialnum != null">
                materialnum,
            </if>
            <if test="materialunit != null">
                materialunit,
            </if>
            <if test="materialremark != null">
                materialremark,
            </if>
            <if test="assembleid != null">
                assembleId,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="materialid != null">
                #{materialid,jdbcType=VARCHAR},
            </if>
            <if test="productid != null">
                #{productid,jdbcType=VARCHAR},
            </if>
            <if test="materialname != null">
                #{materialname,jdbcType=VARCHAR},
            </if>
            <if test="materialnum != null">
                #{materialnum,jdbcType=INTEGER},
            </if>
            <if test="materialunit != null">
                #{materialunit,jdbcType=VARCHAR},
            </if>
            <if test="materialremark != null">
                #{materialremark,jdbcType=VARCHAR},
            </if>
            <if test="assembleid != null">
                #{assembleid,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.ddosec.design.pojo.product_material_archivesQuery"
            resultType="java.lang.Integer">
        select count(*) from product_material_archives
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update product_material_archives
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.materialid != null">
                materialid = #{record.materialid,jdbcType=VARCHAR},
            </if>
            <if test="record.productid != null">
                productid = #{record.productid,jdbcType=VARCHAR},
            </if>
            <if test="record.materialname != null">
                materialname = #{record.materialname,jdbcType=VARCHAR},
            </if>
            <if test="record.materialnum != null">
                materialnum = #{record.materialnum,jdbcType=INTEGER},
            </if>
            <if test="record.materialunit != null">
                materialunit = #{record.materialunit,jdbcType=VARCHAR},
            </if>
            <if test="record.materialremark != null">
                materialremark = #{record.materialremark,jdbcType=VARCHAR},
            </if>
            <if test="record.assembleid != null">
                assembleId = #{record.assembleid,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update product_material_archives
        set id = #{record.id,jdbcType=INTEGER},
        materialid = #{record.materialid,jdbcType=VARCHAR},
        productid = #{record.productid,jdbcType=VARCHAR},
        materialname = #{record.materialname,jdbcType=VARCHAR},
        materialnum = #{record.materialnum,jdbcType=INTEGER},
        materialunit = #{record.materialunit,jdbcType=VARCHAR},
        materialremark = #{record.materialremark,jdbcType=VARCHAR},
        assembleId = #{record.assembleid,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.ddosec.design.pojo.product_material_archives">
        update product_material_archives
        <set>
            <if test="materialid != null">
                materialid = #{materialid,jdbcType=VARCHAR},
            </if>
            <if test="productid != null">
                productid = #{productid,jdbcType=VARCHAR},
            </if>
            <if test="materialname != null">
                materialname = #{materialname,jdbcType=VARCHAR},
            </if>
            <if test="materialnum != null">
                materialnum = #{materialnum,jdbcType=INTEGER},
            </if>
            <if test="materialunit != null">
                materialunit = #{materialunit,jdbcType=VARCHAR},
            </if>
            <if test="materialremark != null">
                materialremark = #{materialremark,jdbcType=VARCHAR},
            </if>
            <if test="assembleid != null">
                assembleId = #{assembleid,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.ddosec.design.pojo.product_material_archives">
        update product_material_archives
        set materialid = #{materialid,jdbcType=VARCHAR},
        productid = #{productid,jdbcType=VARCHAR},
        materialname = #{materialname,jdbcType=VARCHAR},
        materialnum = #{materialnum,jdbcType=INTEGER},
        materialunit = #{materialunit,jdbcType=VARCHAR},
        materialremark = #{materialremark,jdbcType=VARCHAR},
        assembleId = #{assembleid,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
